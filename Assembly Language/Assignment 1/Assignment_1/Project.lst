Microsoft (R) Macro Assembler Version 14.27.29111.0	    03/03/21 20:24:23
Assignment_1.asm					     Page 1 - 1


				;Project #1, 

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .MODEL flat, stdcall
c:\Irvine\SmallWin.inc(11) : warning A4011:multiple .MODEL directives found : .MODEL ignored
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				WriteString proto
				includelib irvine32.lib

 00000000			.data 
 00000000 31 2E 20 78 20	menu1 byte "1. x AND y",0
	   41 4E 44 20 79
	   00
 0000000B 32 2E 20 78 20	menu2 byte "2. x OR y",0
	   4F 52 20 79 00
 00000015 33 2E 20 4E 4F	menu3 byte "3. NOT x", 0
	   54 20 78 00
 0000001E 34 2E 20 78 20	menu4 byte "4. x XOR y", 0
	   58 4F 52 20 79
	   00
 00000029 35 2E 20 78 20	menu5 byte "5. x ADD y",0
	   41 44 44 20 79
	   00
 00000034 36 2E 20 78 20	menu6 byte "6. x SUB y",0
	   53 55 42 20 79
	   00
 0000003F 37 2E 20 45 78	menu7 byte "7. Exit Program",0
	   69 74 20 50 72
	   6F 67 72 61 6D
	   00
 0000004F 73 75 63 63 65	test1 byte "successful call",0
	   73 73 66 75 6C
	   20 63 61 6C 6C
	   00
 0000005F 00000000		x	  dword ?
 00000063 50 6C 65 61 73	stringx		byte "Please enter an x value",0
	   65 20 65 6E 74
	   65 72 20 61 6E
	   20 78 20 76 61
	   6C 75 65 00
 0000007B 50 6C 65 61 73	stringy		byte "Please enter a y value",0
	   65 20 65 6E 74
	   65 72 20 61 20
	   79 20 76 61 6C
	   75 65 00
 00000092 54 68 65 20 72	endprompt   byte "The resulting value is",0
	   65 73 75 6C 74
	   69 6E 67 20 76
	   61 6C 75 65 20
	   69 73 00
 000000A9 54 68 61 6E 6B	exitstmt	byte "Thank You!",0
	   20 59 6F 75 21
	   00

 00000000			.code
 00000000			main proc
 00000000  B8 4A915395		mov eax, 1001010100100010101001110010101b
 00000005  BB F48098B7		mov ebx, -192898889d
 0000000A  B9 152E959F		mov ecx, 2513512637q

 0000000F			MenuOptions::			
 0000000F  BA 00000000 R		mov EDX, OFFSET menu1		;prints menu option 1
 00000014  E8 00000000 E		call WriteString 
 00000019  E8 00000000 E		call crlf

 0000001E  BA 0000000B R		mov EDX, OFFSET menu2		;prints menu option 2
 00000023  E8 00000000 E		call WriteString
 00000028  E8 00000000 E		call crlf

 0000002D  BA 00000015 R		mov EDX, OFFSET menu3		;prints menu option 3
 00000032  E8 00000000 E		call WriteString 
 00000037  E8 00000000 E		call crlf

 0000003C  BA 0000001E R		mov EDX, OFFSET menu4		;prints menu option 4
 00000041  E8 00000000 E		call WriteString 
 00000046  E8 00000000 E		call crlf

 0000004B  BA 00000029 R		mov EDX, OFFSET menu5		;prints menu option 5
 00000050  E8 00000000 E		call WriteString 
 00000055  E8 00000000 E		call crlf	
					
 0000005A  BA 00000034 R		mov EDX, OFFSET menu6		;prints menu option 6
 0000005F  E8 00000000 E		call WriteString 
 00000064  E8 00000000 E		call crlf
					
 00000069  BA 0000003F R		mov EDX, OFFSET menu7		;prints menu option 7
 0000006E  E8 00000000 E		call WriteString 
 00000073  E8 00000000 E		call crlf
					
 00000078  B8 00000006			mov EAX, 6

 0000007D  83 F8 01			cmp eax, 1
 00000080  74 1B			je L1
 00000082  83 F8 02			cmp eax, 2
 00000085  74 22			je L2
 00000087  83 F8 03			cmp eax, 3
 0000008A  74 29			je L3
 0000008C  83 F8 04			cmp eax, 4
 0000008F  74 30			je L4
 00000091  83 F8 05			cmp eax, 5
 00000094  74 37			je L5
 00000096  83 F8 06			cmp eax, 6
 00000099  74 3E			je L6
 0000009B  77 41			ja L7

 0000009D				L1:
 0000009D  E8 00000052				call AND_op
						exit
 000000A2  6A 00	   *	    push   +000000000h
 000000A4  E8 00000000 E   *	    call   ExitProcess
 000000A9				L2:
 000000A9  E8 00000098				call OR_op
						exit
 000000AE  6A 00	   *	    push   +000000000h
 000000B0  E8 00000000 E   *	    call   ExitProcess
 000000B5				L3: 
 000000B5  E8 000000DE				call NOT_op
						exit
 000000BA  6A 00	   *	    push   +000000000h
 000000BC  E8 00000000 E   *	    call   ExitProcess
 000000C1				L4:
 000000C1  E8 00000107				call XOR_op
						exit
 000000C6  6A 00	   *	    push   +000000000h
 000000C8  E8 00000000 E   *	    call   ExitProcess
 000000CD				L5: 
 000000CD  E8 0000014D				call ADD_op
						exit
 000000D2  6A 00	   *	    push   +000000000h
 000000D4  E8 00000000 E   *	    call   ExitProcess
 000000D9				L6:
 000000D9  E8 00000193				call SUB_op
 000000DE				L7:
 000000DE  BA 000000A9 R			mov EDX, OFFSET exitstmt
 000000E3  E8 00000000 E			call WriteString
 000000E8  E8 00000000 E			call crlf
						invoke ExitProcess,0
 000000ED  6A 00	   *	    push   +000000000h
 000000EF  E8 00000000 E   *	    call   ExitProcess
 000000F4			main endp


 000000F4			AND_op proc
 000000F4  BA 00000063 R		mov EDX, OFFSET stringx		
 000000F9  E8 00000000 E		call WriteString			; write stringx to the screen 
 000000FE  E8 00000000 E		call crlf					; new line 
 00000103  E8 00000000 E		call ReadHex				; read the integer the user inputed
 00000108  A3 0000005F R		mov x, eax					; move the value to x

 0000010D  BA 0000007B R		mov edx, OFFSET stringy		;write stringy to the screen 
 00000112  E8 00000000 E		call WriteString 
 00000117  E8 00000000 E		call crlf					;new line 
 0000011C  E8 00000000 E		call ReadHex				;read the integer the user inputed onto eax

 00000121  23 05 0000005F R		AND eax, x					;and two values together 
 00000127  BA 00000092 R		mov EDX, OFFSET endprompt	;move the endprompt to edx for printing 
 0000012C  E8 00000000 E		call WriteString			;write string	 
 00000131  E8 00000000 E		call crlf					;nex line 
 00000136  E8 00000000 E		call WriteHex				;write the anded eax value in hexadecimal
 0000013B  E8 00000000 E		call crlf					;new line 
 00000140  E9 FFFFFECA			jmp MenuOptions
 00000145  C3				ret
 00000146			AND_op endp
					
 00000146			OR_op PROC
 00000146  BA 00000063 R		mov EDX, OFFSET stringx		
 0000014B  E8 00000000 E		call WriteString			; write stringx to the screen 
 00000150  E8 00000000 E		call crlf					; new line 
 00000155  E8 00000000 E		call ReadHex				; read the integer the user inputed
 0000015A  A3 0000005F R		mov x, eax					; move the value to x

 0000015F  BA 0000007B R		mov edx, OFFSET stringy		;write stringy to the screen 
 00000164  E8 00000000 E		call WriteString 
 00000169  E8 00000000 E		call crlf					;new line 
 0000016E  E8 00000000 E		call ReadHex				;read the integer the user inputed onto eax

 00000173  0B 05 0000005F R		OR eax, x					;or two values together 
 00000179  BA 00000092 R		mov EDX, OFFSET endprompt	;move the endprompt to edx for printing 
 0000017E  E8 00000000 E		call WriteString			;write string	 
 00000183  E8 00000000 E		call crlf					;nex line 
 00000188  E8 00000000 E		call WriteHex				;write the or-ed eax value in hexadecimal
 0000018D  E8 00000000 E		call crlf					;new line 
 00000192  E9 FFFFFE78			jmp MenuOptions
 00000197  C3				ret
 00000198			OR_op ENDP

 00000198			NOT_op PROC
 00000198  BA 00000063 R		mov EDX, OFFSET stringx		
 0000019D  E8 00000000 E		call WriteString			; write stringx to the screen 
 000001A2  E8 00000000 E		call crlf					; new line 
 000001A7  E8 00000000 E		call ReadHex				; read the integer the user inputed

 000001AC  F7 D0			NOT eax						; not the read value 
 000001AE  BA 00000092 R		mov EDX, OFFSET endprompt	;move the endprompt to edx for printing 
 000001B3  E8 00000000 E		call WriteString			;write string	 
 000001B8  E8 00000000 E		call crlf					;nex line 
 000001BD  E8 00000000 E		call WriteHex				;write the NOTed eax value in hexadecimal
 000001C2  E8 00000000 E		call crlf					;new line 
 000001C7  E9 FFFFFE43			jmp MenuOptions
 000001CC  C3				ret
 000001CD			NOT_op ENDP

 000001CD			XOR_op PROC 
 000001CD  BA 00000063 R		mov EDX, OFFSET stringx		
 000001D2  E8 00000000 E		call WriteString			; write stringx to the screen 
 000001D7  E8 00000000 E		call crlf					; new line 
 000001DC  E8 00000000 E		call ReadHex				; read the integer the user inputed
 000001E1  A3 0000005F R		mov x, eax					; move the value to x

 000001E6  BA 0000007B R		mov edx, OFFSET stringy		;write stringy to the screen 
 000001EB  E8 00000000 E		call WriteString 
 000001F0  E8 00000000 E		call crlf					;new line 
 000001F5  E8 00000000 E		call ReadHex				;read the integer the user inputed onto eax

 000001FA  33 05 0000005F R		XOR eax, x					;xor two values together 
 00000200  BA 00000092 R		mov EDX, OFFSET endprompt	;move the endprompt to edx for printing 
 00000205  E8 00000000 E		call WriteString			;write string	 
 0000020A  E8 00000000 E		call crlf					;nex line 
 0000020F  E8 00000000 E		call WriteHex				;write the or-ed eax value in hexadecimal
 00000214  E8 00000000 E		call crlf					;new line 
 00000219  E9 FFFFFDF1			jmp MenuOptions
 0000021E  C3				ret
 0000021F			XOR_op ENDP

 0000021F			ADD_op PROC
 0000021F  BA 00000063 R		mov EDX, OFFSET stringx		
 00000224  E8 00000000 E		call WriteString			; write stringx to the screen 
 00000229  E8 00000000 E		call crlf					; new line 
 0000022E  E8 00000000 E		call ReadHex				; read the integer the user inputed
 00000233  A3 0000005F R		mov x, eax					; move the value to x

 00000238  BA 0000007B R		mov edx, OFFSET stringy		;write stringy to the screen 
 0000023D  E8 00000000 E		call WriteString 
 00000242  E8 00000000 E		call crlf					;new line 
 00000247  E8 00000000 E		call ReadHex				;read the integer the user inputed onto eax

 0000024C  03 05 0000005F R		ADD eax, x					; add two values together 
 00000252  BA 00000092 R		mov EDX, OFFSET endprompt	;move the endprompt to edx for printing 
 00000257  E8 00000000 E		call WriteString			;write string	 
 0000025C  E8 00000000 E		call crlf					;nex line 
 00000261  E8 00000000 E		call WriteHex				;write the added eax value in hexadecimal
 00000266  E8 00000000 E		call crlf					;new line 
 0000026B  E9 FFFFFD9F			jmp MenuOptions
 00000270  C3				ret
 00000271			ADD_op ENDP

 00000271			SUB_op PROC
 00000271  BA 00000063 R		mov EDX, OFFSET stringx		
 00000276  C7 05 0000005F R		mov x, 10010011					; move the value to x
	   0098BD9B

 00000280  BA 0000007B R		mov edx, OFFSET stringy		;write stringy to the screen 
 00000285  B8 009896EE			mov eax, 10000110

 0000028A  29 05 0000005F R		SUB x, eax					; add two values together 
 00000290  BA 00000092 R		mov EDX, OFFSET endprompt	;move the endprompt to edx for printing 
 00000295  E8 00000000 E		call WriteString			;write string	 
 0000029A  E8 00000000 E		call crlf					;nex line 
 0000029F  A1 0000005F R		mov eax, x					; since the subtracted value was stored in x, mov to eax
 000002A4  E8 00000000 E		call WriteHex				;write the added eax value in hexadecimal
 000002A9  E8 00000000 E		call crlf					;new line 
 000002AE  C3				ret
 000002AF			SUB_op ENDP
				end main
Microsoft (R) Macro Assembler Version 14.27.29111.0	    03/03/21 20:24:23
Assignment_1.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000B4 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000002AF DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ADD_op . . . . . . . . . . . . .	P Near	 0000021F _TEXT	Length= 00000052 Public STDCALL
AND_op . . . . . . . . . . . . .	P Near	 000000F4 _TEXT	Length= 00000052 Public STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
NOT_op . . . . . . . . . . . . .	P Near	 00000198 _TEXT	Length= 00000035 Public STDCALL
OR_op  . . . . . . . . . . . . .	P Near	 00000146 _TEXT	Length= 00000052 Public STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SUB_op . . . . . . . . . . . . .	P Near	 00000271 _TEXT	Length= 0000003E Public STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
XOR_op . . . . . . . . . . . . .	P Near	 000001CD _TEXT	Length= 00000052 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000F4 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000009D _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000000A9 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000000B5 _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 000000C1 _TEXT	
  L5 . . . . . . . . . . . . . .	L Near	 000000CD _TEXT	
  L6 . . . . . . . . . . . . . .	L Near	 000000D9 _TEXT	
  L7 . . . . . . . . . . . . . .	L Near	 000000DE _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MenuOptions  . . . . . . . . . .	L Near	 0000000F _TEXT	
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
endprompt  . . . . . . . . . . .	Byte	 00000092 _DATA	
exitstmt . . . . . . . . . . . .	Byte	 000000A9 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
menu1  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
menu2  . . . . . . . . . . . . .	Byte	 0000000B _DATA	
menu3  . . . . . . . . . . . . .	Byte	 00000015 _DATA	
menu4  . . . . . . . . . . . . .	Byte	 0000001E _DATA	
menu5  . . . . . . . . . . . . .	Byte	 00000029 _DATA	
menu6  . . . . . . . . . . . . .	Byte	 00000034 _DATA	
menu7  . . . . . . . . . . . . .	Byte	 0000003F _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
stringx  . . . . . . . . . . . .	Byte	 00000063 _DATA	
stringy  . . . . . . . . . . . .	Byte	 0000007B _DATA	
test1  . . . . . . . . . . . . .	Byte	 0000004F _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
x  . . . . . . . . . . . . . . .	DWord	 0000005F _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   1 Warnings
	   0 Errors
